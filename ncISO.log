INFO  [main] controller.ServiceController.[] May/10 11:39:12 - Running calcWafScore in service controller...
ERROR [main] controller.ServiceController.[] May/10 11:39:12 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 11:40:23 - Running calcWafScore in service controller...
ERROR [main] controller.ServiceController.[] May/10 11:40:23 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 11:41:27 - Running calcWafScore in service controller...
ERROR [main] controller.ServiceController.[] May/10 11:41:27 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 11:41:47 - Running calcWafScore in service controller...
INFO  [main] controller.ServiceController.[] May/10 11:42:33 - Running calcWafScore in service controller...
ERROR [main] controller.ServiceController.[] May/10 11:42:35 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 11:43:36 - Running calcWafScore in service controller...
ERROR [main] controller.ServiceController.[] May/10 11:43:37 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 11:44:16 - Running service controller...
INFO  [main] controller.ServiceController.[] May/10 11:44:16 - Launch start time: 10 May 2016 11:44
INFO  [main] bean.ThreddsDatasetTree.[] May/10 11:44:16 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] May/10 11:44:25 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 2 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 3 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS)/OceanNOMADS Ocean Model Portal; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 4 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Global); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Regional); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Hybrid Coordinate Ocean Model; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Real Time Ocean Forecast System; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Centers for Environmental Information (NCEI); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Marine Fisheries Service (NOAA Fisheries); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Weather Service; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/Office of Oceanic and Atmospheric Research (OAR); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 11:44:33 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] service.DatasetTreeService.[] May/10 11:44:33 - mdcs.size()=0
INFO  [main] controller.ServiceController.[] May/10 12:37:54 - Running service controller...
INFO  [main] controller.ServiceController.[] May/10 12:37:55 - Launch start time: 10 May 2016 12:37
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:37:55 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] May/10 12:37:56 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 2 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 3 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS)/OceanNOMADS Ocean Model Portal; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 4 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:01 - maxDepth: 15 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Global); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 6 dataset.getFullName():NCOM Forecast Model Run Collections; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 7 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 1 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 8 dataset.getFullName():NCOM Region 1 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 8 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 2 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 9 dataset.getFullName():NCOM Region 2 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:02 - maxDepth: 15 depth: 9 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 5 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 10 dataset.getFullName():NCOM Region 5 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 10 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 6 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 11 dataset.getFullName():NCOM Region 6 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 11 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 7 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 12 dataset.getFullName():NCOM Region 7 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 12 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 10 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - maxDepth: 15 depth: 13 dataset.getFullName():NCOM Region 10 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:03 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 13 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM SFC 8 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 14 dataset.getFullName():NCOM SFC 8 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 14 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM SFC8 Hindcast Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():NCOM SFC8 Hindcast Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Regional); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Hybrid Coordinate Ocean Model; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Real Time Ocean Forecast System; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Centers for Environmental Information (NCEI); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Marine Fisheries Service (NOAA Fisheries); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Weather Service; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/Office of Oceanic and Atmospheric Research (OAR); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 12:38:04 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - mdcs.size()=8
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=1 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg1_agg/NCOM_Region_1_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=thredds
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=dodsC
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg1_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_1_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=2 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg2_agg/NCOM_Region_2_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg2_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_2_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=3 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg5_agg/NCOM_Region_5_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg5_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_5_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=4 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg6_agg/NCOM_Region_6_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg6_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_6_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=5 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg7_agg/NCOM_Region_7_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg7_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_7_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=6 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg10_agg/NCOM_Region_10_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_reg10_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_Region_10_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=7 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_sfc8_agg/NCOM_SFC_8_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_sfc8_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_SFC_8_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 12:38:04 - cnt=8 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_sfc8_hind_agg/NCOM_SFC8_Hindcast_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=ncom_sfc8_hind_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 12:38:04 - displayName=NCOM_SFC8_Hindcast_Aggregation_best.ncd
ERROR [main] controller.ServiceController.[] May/10 14:24:01 - java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at gov.noaa.eds.util.FileUtility.<init>(FileUtility.java:22)
	at gov.noaa.eds.util.WafScoreCalculator.getSummary(WafScoreCalculator.java:12)
	at gov.noaa.eds.controller.ServiceController.calcWafScore(ServiceController.java:55)
	at gov.noaa.eds.controller.ServiceController.main(ServiceController.java:134)

INFO  [main] controller.ServiceController.[] May/10 15:11:52 - Running service controller...
INFO  [main] controller.ServiceController.[] May/10 15:11:52 - Launch start time: 10 May 2016 03:11
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:52 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] May/10 15:11:53 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:56 - maxDepth: 15 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:56 - maxDepth: 15 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:56 - maxDepth: 15 depth: 2 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:56 - maxDepth: 15 depth: 3 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS)/OceanNOMADS Ocean Model Portal; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 4 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Global); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 6 dataset.getFullName():NCOM Forecast Model Run Collections; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 7 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 1 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 8 dataset.getFullName():NCOM Region 1 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:57 - maxDepth: 15 depth: 8 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 2 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 9 dataset.getFullName():NCOM Region 2 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 9 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 5 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 10 dataset.getFullName():NCOM Region 5 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 10 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 6 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 11 dataset.getFullName():NCOM Region 6 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 11 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 7 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 12 dataset.getFullName():NCOM Region 7 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:58 - maxDepth: 15 depth: 12 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM Region 10 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 13 dataset.getFullName():NCOM Region 10 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 13 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM SFC 8 Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 14 dataset.getFullName():NCOM SFC 8 Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 14 dataset.getFullName():NCOM Forecast Model Run Collections/NCOM SFC8 Hindcast Aggregation; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():NCOM SFC8 Hindcast Aggregation/Best Time Series; dataset.hasAccess(): true maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Regional); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Hybrid Coordinate Ocean Model; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Real Time Ocean Forecast System; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Centers for Environmental Information (NCEI); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Marine Fisheries Service (NOAA Fisheries); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Weather Service; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/Office of Oceanic and Atmospheric Research (OAR); dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] May/10 15:11:59 - maxDepth: 15 depth: 15 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 1000 leafcnt: 1
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - mdcs.size()=8
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=1 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg1_agg/NCOM_Region_1_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=thredds
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=dodsC
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg1_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_1_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=2 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg2_agg/NCOM_Region_2_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg2_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_2_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=3 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg5_agg/NCOM_Region_5_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg5_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_5_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=4 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg6_agg/NCOM_Region_6_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg6_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_6_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=5 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg7_agg/NCOM_Region_7_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg7_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_7_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=6 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_reg10_agg/NCOM_Region_10_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_reg10_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_Region_10_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=7 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_sfc8_agg/NCOM_SFC_8_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_sfc8_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_SFC_8_Aggregation_best.ncd
INFO  [main] service.DatasetTreeService.[] May/10 15:11:59 - cnt=8 ------------------ Processing: dods://ecowatch.ncddc.noaa.gov/thredds/dodsC/ncom/ncom_sfc8_hind_agg/NCOM_SFC8_Hindcast_Aggregation_best.ncd
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: thredds; url: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: dodsC; url: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - returning: ncom; url: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - found: /thredds/dodsC/ncom/
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=ncom_sfc8_hind_agg
INFO  [main] bean.ThreddsDatasetTree.[] May/10 15:11:59 - displayName=NCOM_SFC8_Hindcast_Aggregation_best.ncd
INFO  [main] controller.ServiceController.[] Jul/14 10:46:57 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/14 10:46:57 - Launch start time: 14 Jul 2016 10:46
INFO  [main] bean.ThreddsDatasetTree.[] Jul/14 10:46:57 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/14 10:46:57 - rootNode=thredds
INFO  [main] controller.ServiceController.[] Jul/14 10:49:02 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/14 10:49:02 - Launch start time: 14 Jul 2016 10:49
INFO  [main] bean.ThreddsDatasetTree.[] Jul/14 10:49:02 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/14 10:49:13 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:49:15 - maxDepth: 1 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:49:15 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:49:15 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] service.DatasetTreeService.[] Jul/14 10:49:15 - mdcs.size()=0
INFO  [main] controller.ServiceController.[] Jul/14 10:52:54 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/14 10:52:54 - Launch start time: 14 Jul 2016 10:52
INFO  [main] bean.ThreddsDatasetTree.[] Jul/14 10:52:54 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/14 10:52:59 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:53:03 - maxDepth: 1 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:53:03 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:53:03 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] service.DatasetTreeService.[] Jul/14 10:53:27 - mdcs.size()=0
INFO  [main] controller.ServiceController.[] Jul/14 10:56:36 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/14 10:56:36 - Launch start time: 14 Jul 2016 10:56
INFO  [main] bean.ThreddsDatasetTree.[] Jul/14 10:56:36 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/14 10:56:38 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:58:01 - maxDepth: 1 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:58:06 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 10:58:14 - maxDepth: 1 depth: 1 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] service.DatasetTreeService.[] Jul/14 10:58:19 - mdcs.size()=0
INFO  [main] controller.ServiceController.[] Jul/14 14:58:45 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/14 14:58:45 - Launch start time: 14 Jul 2016 02:58
INFO  [main] bean.ThreddsDatasetTree.[] Jul/14 14:58:45 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/14 14:58:45 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:58:49 - maxDepth: 5 depth: 0 dataset.getFullName():GEO-IDE/TDS quality rubric; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:58:54 - maxDepth: 5 depth: 1 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:58:55 - maxDepth: 5 depth: 2 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:58:57 - maxDepth: 5 depth: 3 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Environmental Satellite, Data, and Information Service (NESDIS)/OceanNOMADS Ocean Model Portal; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:58:59 - maxDepth: 5 depth: 4 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:00 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Global); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:01 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Navy Coastal Ocean Model(Regional); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:02 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Hybrid Coordinate Ocean Model; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:02 - maxDepth: 5 depth: 5 dataset.getFullName():THREDDS Server Default Catalog : You must change this to fit your server!/Real Time Ocean Forecast System; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:02 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Centers for Environmental Information (NCEI); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:03 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Marine Fisheries Service (NOAA Fisheries); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:03 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/National Weather Service; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:04 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/National Oceanic and Atmospheric Administration (NOAA)/Office of Oceanic and Atmospheric Research (OAR); dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/14 14:59:04 - maxDepth: 5 depth: 5 dataset.getFullName():GEO-IDE/NOAA-Affiliated; dataset.hasAccess(): false maxLeaves: 20 leafcnt: 0
INFO  [main] service.DatasetTreeService.[] Jul/14 14:59:05 - mdcs.size()=0
INFO  [main] controller.ServiceController.[] Jul/15 10:27:12 - Running service controller...
INFO  [main] controller.ServiceController.[] Jul/15 10:27:12 - Launch start time: 15 Jul 2016 10:27
INFO  [main] bean.ThreddsDatasetTree.[] Jul/15 10:27:12 - displayName=ROOT
INFO  [main] service.DatasetTreeService.[] Jul/15 10:27:14 - rootNode=thredds
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/15 10:27:19 - maxDepth: 5 depth: 0 dataset.getFullName():Carbontracker CT2009 Fluxes; dataset.hasAccess(): true maxLeaves: 20 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/15 10:27:57 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/15 10:27:57 - adding mdc
INFO  [main] service.DatasetTreeService.[] Jul/15 10:27:57 - mdcs.size()=1
INFO  [main] service.DatasetTreeService.[] Jul/15 10:28:09 - cnt=1 ------------------ Processing: dods://ferret.pmel.noaa.gov/thredds/dodsC/ct_flux
INFO  [main] bean.ThreddsDatasetTree.[] Jul/15 10:28:15 - returning: ROOT; url: /ROOT
INFO  [main] bean.ThreddsDatasetTree.[] Jul/15 10:28:21 - displayName=thredds
INFO  [main] bean.ThreddsDatasetTree.[] Jul/15 10:28:26 - displayName=dodsC
INFO  [main] bean.ThreddsDatasetTree.[] Jul/15 10:28:26 - displayName=ct_flux
INFO  [main] controller.ServiceController.[] Jul/26 16:16:27 - Running createWaf in service controller...
INFO  [main] controller.ServiceController.[] Jul/26 16:17:32 - Running createWaf in service controller...
INFO  [main] controller.ServiceController.[] Jul/26 16:18:50 - Running createWaf in service controller...
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:18:56 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Annual means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:26 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:26 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:28 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Seasonal means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:29 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:29 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:30 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Monthly means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 2
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:31 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:31 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:40 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/COADS/COADS Surface Marine Observations; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 3
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:42 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:42 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:19:42 - adding mdc
INFO  [main] service.WafService.[] Jul/26 16:19:42 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_annual.xml
INFO  [main] service.WafService.[] Jul/26 16:19:45 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_seasonal.xml
INFO  [main] service.WafService.[] Jul/26 16:19:47 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_monthly.xml
INFO  [main] service.WafService.[] Jul/26 16:19:48 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_coads.xml
INFO  [main] controller.ServiceController.[] Jul/26 16:21:52 - Running createWaf in service controller...
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Annual means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 0
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Seasonal means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 1
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/World Ocean Atlas/World Ocean Atlas 2009 1x1 Monthly means; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 2
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - adding mdc
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - maxDepth: 10000 depth: 0 dataset.getFullName():WOA data/COADS/COADS Surface Marine Observations; dataset.hasAccess(): true maxLeaves: 10000 leafcnt: 3
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - allowable service
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - New Parent
INFO  [main] impl.CatalogCrawlerImpl.[] Jul/26 16:21:54 - adding mdc
INFO  [main] service.WafService.[] Jul/26 16:21:54 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_annual.xml
INFO  [main] service.WafService.[] Jul/26 16:24:42 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_seasonal.xml
INFO  [main] service.WafService.[] Jul/26 16:24:47 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_woa09_1deg_monthly.xml
INFO  [main] service.WafService.[] Jul/26 16:25:18 - ncmlFilePath=/home/rhs/uaf/uafwaf/ncml/thredds_dodsC_coads.xml
